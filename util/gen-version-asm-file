#!/bin/bash
# This generates a version.asm file based on the input version.asm.in template
# file.
#
# Template variables
#  %GIT_DATE% = YYYY-MM-DD of the last commit
#  %GIT_HASH% = short hash version of the last commit
#  %GIT_DIRTY% = "D" if there are uncommited changes, empty otherwise
#  %GIT_DIRTY_LONG% = "DIRTY" if there are uncommited changes, empty otherwise
#  %MACHINE% = <machine string> from -M option

usage() {
  echo "gen-version-asm-file -m <machine string> -i <version.asm.in> -o <version.asm>"
}

while getopts "m:i:o:" ARG; do
  case $ARG in
    m)
      MACHINE=$OPTARG
      ;;
    i)
      INPUT_FILE=$OPTARG
      ;;
    o)
      OUTPUT_FILE=$OPTARG
      ;;
    *)
      usage
      exit 0
      ;;
  esac
done

if [ -z "$MACHINE" ] || [ -z "$INPUT_FILE" ] || [ -z "$OUTPUT_FILE" ]; then
  usage
  exit 0
fi

GIT_DATE=`git log -1 --pretty=format:"%as"`
GIT_HASH=`git log -1 --pretty=format:"%h" | tr a-z A-Z`

if ! git diff-index --quiet HEAD --;then
  GIT_DIRTY="D"
  GIT_DIRTY_LONG="DIRTY"
fi

echo "; generated by gen-version-asm-file on `date -u`" > $OUTPUT_FILE
cat $INPUT_FILE \
    | sed "s/%MACHINE%/$MACHINE/g" \
    | sed "s/%GIT_DATE%/$GIT_DATE/g" \
    | sed "s/%GIT_HASH%/$GIT_HASH/g" \
    | sed "s/%GIT_DIRTY%/$GIT_DIRTY/g" \
    | sed "s/%GIT_DIRTY_LONG%/$GIT_DIRTY_LONG/g" >> $OUTPUT_FILE

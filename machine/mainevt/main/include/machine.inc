PALETTE_RAM_START		equ $5e00
PALETTE_RAM_SIZE		equ $200
PALETTE_RAM_ADDRESS_LINES	equ $9
PALETTE_SIZE			equ $20		; size of each palette


; 0x3800 - 0x3807 = k051937 register?
; 0x0000 - 0x3bff = k052109 ram
; 0x3c00 - 0x3fff = k051960 ram
TILE_RAM_START			equ $0000
TILE_RAM_SIZE			equ $4000

WORK_RAM_START			equ $4000
WORK_RAM_SIZE			equ $1e00
WORK_RAM_ADDRESS_LINES		equ $9

ROM_SIZE			equ $8000
ROM_START			equ $8000

REG_WATCHDOG			equ $1f8c
REG_SOUND			equ $1f84
REG_SOUND_IRQ_TRIGGER		equ $1f88

REG_INPUT_P1			equ $1f95
REG_INPUT_P2			equ $1f96
REG_INPUT_P3			equ $1f99
REG_INPUT_P4			equ $1f9a
REG_INPUT_DSW1			equ $1f97
REG_INPUT_DSW2			equ $1f9b
REG_INPUT_DSW3			equ $1f98
REG_INPUT_SYSTEM		equ $1f94

CHAR_COLON			equ ':'

; note only 36 tiles are visable
SCREEN_TILES_PER_LINE		equ 64
SCREEN_BYTES_PER_TILE		equ 1
SCREEN_BYTES_PER_LINE		equ (SCREEN_BYTES_PER_TILE * SCREEN_TILES_PER_LINE)

	macro	SEEK_XY
		ldx	#(TILE_RAM_START + $208e + \1 + (\2 * SCREEN_BYTES_PER_LINE))
	endm

	macro	SEEK_LN
		ldx	#(TILE_RAM_START + $208e + (\1 * SCREEN_BYTES_PER_LINE))
	endm

	macro	WATCHDOG
		sta	REG_WATCHDOG
	endm

	macro	SOUND_PLAY
		sta	REG_SOUND
		sta	REG_SOUND_IRQ_TRIGGER
	endm

	macro	SOUND_STOP
		clr	REG_SOUND
		sta	REG_SOUND_IRQ_TRIGGER
	endm

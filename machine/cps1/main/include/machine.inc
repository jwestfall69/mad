	include "cps_a.inc"
	include "cps_b.inc"
	include "romset.inc"

ROM_START			equ $0
ROM_SIZE			equ $20000

; using the values from sf2
OBJECT_RAM			equ $910000
OBJECT_RAM_SIZE			equ $800

SCROLL1_RAM			equ $90c000
SCROLL1_RAM_SIZE		equ $4000

SCROLL2_RAM			equ $904000
SCROLL2_RAM_SIZE		equ $4000

SCROLL3_RAM			equ $908000
SCROLL3_RAM_SIZE		equ $4000

ROW_SCROLL_RAM			equ $920000
ROW_SCROLL_RAM_SIZE		equ $4000

PALETTE_RAM			equ $900000
PALETTE_RAM_SIZE		equ $4000
PALETTE_SIZE			equ $20

GFX_RAM				equ $900000
GFX_RAM_SIZE			equ $30000
GFX_RAM_ADDRESS_LINES		equ 17
GFX_RAM_MASK			equ $ffff

WORK_RAM			equ $ff0000
WORK_RAM_SIZE			equ $10000
WORK_RAM_ADDRESS_LINES		equ 16
WORK_RAM_MASK			equ $ffff

REG_SOUND1			equ $800181
REG_SOUND2			equ $800189
REG_COIN_CTRL			equ $800030

REG_INPUT_DSW1			equ $80001a
REG_INPUT_DSW2			equ $80001c
REG_INPUT_DSW3			equ $80001e
REG_INPUT_P1			equ $800001
REG_INPUT_P2			equ $800000
REG_INPUT_IN2			equ $800177
REG_INPUT_IN3			equ $800179
REG_INPUT_SYSTEM		equ $800018

CHAR_COLON			equ ':'

SOUND_NUM_STOP			equ $f0

SCREEN_TILES_PER_LINE		equ 32
SCREEN_BYTES_PER_TILE		equ 4
SCREEN_BYTES_PER_LINE		equ (SCREEN_BYTES_PER_TILE * SCREEN_TILES_PER_LINE)

	ifd _SCREEN_TATE_
		macro SEEK_XY
			lea	(SCROLL1_RAM + $1788 - ((\2 * SCREEN_BYTES_PER_LINE)) + (\1 * SCREEN_BYTES_PER_TILE)), a6
		endm

		macro SEEK_LN
			lea	(SCROLL1_RAM + $1788 - (\1 * SCREEN_BYTES_PER_LINE)), a6
		endm
	else
		macro SEEK_XY
			lea	(SCROLL1_RAM + $8 + (\1 * SCREEN_BYTES_PER_LINE)) + (\2 * SCREEN_BYTES_PER_TILE), a6
		endm

		macro SEEK_LN
			lea	(SCROLL1_RAM + $8 + (\1 * SCREEN_BYTES_PER_TILE)), a6
		endm
	endif

	macro SOUND_PLAY
		DSUB	sound_play
	endm

	macro SOUND_STOP
		move.b	#SOUND_NUM_STOP, REG_SOUND1
	endm

	macro WATCHDOG
	endm

ROM_SIZE			equ $8000
ROM_START			equ $8000

PALETTE_RAM			equ $2400
PALETTE_RAM_SIZE		equ $60
PALETTE_RAM_ADDRESS_LINES	equ 6
PALETTE_SIZE			equ $20

SCROLL_RAM			equ $2200
SCROLL_RAM_SIZE			equ $200

SPRITE_RAM			equ $2000
SPRITE_RAM_SIZE			equ $200
SPRITE_RAM_ADDRESS_LINES	equ $9
SPRITE_PALETTE			equ PALETTE_RAM + $40

TILE_RAM			equ $0000
TILE_RAM_SIZE			equ $2000
TILE_RAM_ADDRESS_LINES		equ 13

WORK_RAM			equ $4000
WORK_RAM_SIZE			equ $2000
WORK_RAM_ADDRESS_LINES		equ 13

; K007342 tile stuff
K007342_BASE			equ $0000
LAYER_A_TILE			equ K007342_BASE + $800
LAYER_A_TILE_SIZE		equ $800
LAYER_A_TILE_ATTR		equ K007342_BASE
LAYER_A_TILE_ATTR_SIZE		equ $800
LAYER_A_TILE_PALETTE		equ PALETTE_RAM

LAYER_B_TILE			equ K007342_BASE + $1800
LAYER_B_TILE_SIZE		equ $800
LAYER_B_TILE_ATTR		equ K007342_BASE + $1000
LAYER_B_TILE_ATTR_SIZE		equ $800
LAYER_B_TILE_PALETTE		equ PALETTE_RAM + PALETTE_SIZE

; K007342 registers
; Note: x/y are swapped because screen is tate
REG_LAYER_SCROLL_Y_HI		equ $2602
REG_LAYER_A_SCROLL_Y		equ $2603
REG_LAYER_A_SCROLL_X		equ $2604
REG_LAYER_B_SCROLL_Y		equ $2605
REG_LAYER_B_SCROLL_X		equ $2606

K057133_BASE			equ $2f80

REG_WATCHDOG			equ $2ec0
REG_CONTROL			equ $2f40
REG_SOUND			equ $2e80

REG_INPUT_P1			equ $2e01
REG_INPUT_P2			equ $2e02
REG_INPUT_DSW1			equ $2e40
REG_INPUT_DSW2			equ $2e03
REG_INPUT_DSW3			equ $2e00

CHAR_COLON			equ $10

; note only 28 tiles are visable
SCREEN_TILES_PER_LINE		equ 32
SCREEN_BYTES_PER_TILE		equ 1
SCREEN_BYTES_PER_LINE		equ (SCREEN_BYTES_PER_TILE * SCREEN_TILES_PER_LINE)

	macro	SEEK_XY
		ldx	#(LAYER_A_TILE + $3a0 + (\2 * SCREEN_BYTES_PER_TILE) - (\1 * SCREEN_BYTES_PER_LINE))
	endm

	macro	SEEK_LN
		ldx	#(LAYER_A_TILE + $3a0 + (\1 * SCREEN_BYTES_PER_TILE))
	endm

	macro	WATCHDOG
		sta	REG_WATCHDOG
	endm

	macro	SOUND_PLAY
		sta	REG_SOUND
	endm

	macro	SOUND_STOP
		clr	REG_SOUND
	endm

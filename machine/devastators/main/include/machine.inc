PALETTE_RAM			equ $5e00
PALETTE_RAM_SIZE		equ $200
PALETTE_RAM_ADDRESS_LINES	equ 9
PALETTE_SIZE			equ $20		; size of each palette

; IC I5 next to k051960
SPRITE_RAM			equ $3c00
SPRITE_RAM_SIZE			equ $400
SPRITE_RAM_ADDRESS_LINES	equ 10

; IC I17 nearest to k052109
TILE1_RAM			equ $0000
TILE1_RAM_SIZE			equ $1800
TILE1_RAM_ADDRESS_LINES		equ 11

; IC H17
TILE2_RAM			equ $2000
TILE2_RAM_SIZE			equ $1800
TILE2_RAM_ADDRESS_LINES		equ 11

WORK_RAM			equ $4000
WORK_RAM_SIZE			equ $1e00
WORK_RAM_ADDRESS_LINES		equ 9

ROM_SIZE			equ $8000
ROM_START			equ $8000

REG_WATCHDOG			equ $1f8c
REG_SOUND			equ $1f84
REG_SOUND_IRQ_TRIGGER		equ $1f88

REG_INPUT_P1			equ $1f95
REG_INPUT_P2			equ $1f96
REG_INPUT_DSW1			equ $1f97
REG_INPUT_DSW2			equ $1f9b
REG_INPUT_DSW3			equ $1f98
REG_INPUT_SYSTEM		equ $1f94

CHAR_COLON			equ $fe		; empty

; note only 36 tiles are visable
SCREEN_TILES_PER_LINE		equ 64
SCREEN_BYTES_PER_TILE		equ 1
SCREEN_BYTES_PER_LINE		equ (SCREEN_BYTES_PER_TILE * SCREEN_TILES_PER_LINE)

	macro	SEEK_XY
		ldx	#(TILE2_RAM + $74d + (\2 * SCREEN_BYTES_PER_TILE) - (\1 * SCREEN_BYTES_PER_LINE))
	endm

	macro	SEEK_LN
		ldx	#(TILE2_RAM + $74d + (\1 * SCREEN_BYTES_PER_TILE))
	endm

	macro	WATCHDOG
		sta	REG_WATCHDOG
	endm

	macro	SOUND_PLAY
		sta	REG_SOUND
		sta	REG_SOUND_IRQ_TRIGGER
	endm

	macro	SOUND_STOP
		clr	REG_SOUND
		sta	REG_SOUND_IRQ_TRIGGER
	endm

ROM_SIZE			equ $8000
ROM_START			equ $8000

PALETTE_RAM			equ $5e00
PALETTE_RAM_SIZE		equ $200
PALETTE_RAM_ADDRESS_LINES	equ 9
PALETTE_SIZE			equ $20		; size of each palette

SPRITE_RAM			equ $3c00
SPRITE_RAM_SIZE			equ $400
SPRITE_RAM_ADDRESS_LINES	equ 10
SPRITE_PALETTE			equ PALETTE_RAM + $180

WORK_RAM			equ $4000
WORK_RAM_SIZE			equ $1e00
WORK_RAM_ADDRESS_LINES		equ 9

; K052109 tile stuff
K052109_BASE			equ $0000
TILE_ATTR_RAM			equ K052109_BASE
TILE_ATTR_RAM_SIZE		equ $1800
TILE_ATTR_RAM_ADDRESS_LINES	equ 12

TILE_RAM			equ K052109_BASE + $2000
TILE_RAM_SIZE			equ $1800
TILE_RAM_ADDRESS_LINES		equ 12

FIX_TILE			equ TILE_RAM
FIX_TILE_SIZE			equ $800
FIX_TILE_ATTR			equ TILE_ATTR_RAM
FIX_TILE_ATTR_SIZE		equ $800
FIX_TILE_PALETTE		equ PALETTE_RAM

LAYER_A_TILE			equ TILE_RAM + $800
LAYER_A_TILE_SIZE		equ $800
LAYER_A_TILE_ATTR		equ TILE_ATTR_RAM + $800
LAYER_A_TILE_ATTR_SIZE		equ $800
LAYER_A_TILE_PALETTE		equ PALETTE_RAM + $100
LAYER_A_SCROLL			equ K052109_BASE + $1800
LAYER_A_SCROLL_SIZE		equ $400

LAYER_B_TILE			equ TILE_RAM + $1000
LAYER_B_TILE_SIZE		equ $800
LAYER_B_TILE_ATTR		equ TILE_ATTR_RAM + $1000
LAYER_B_TILE_ATTR_SIZE		equ $800
LAYER_B_TILE_PALETTE		equ PALETTE_RAM + $80
LAYER_B_SCROLL			equ K052109_BASE + $3800
LAYER_B_SCROLL_SIZE		equ $400

; K052109 registers
REG_LAYER_A_SCROLL_X		equ K052109_BASE + $1a00
REG_LAYER_A_SCROLL_Y		equ K052109_BASE + $180c
REG_LAYER_B_SCROLL_X		equ K052109_BASE + $3a00
REG_LAYER_B_SCROLL_Y		equ K052109_BASE + $380c

REG_WATCHDOG			equ $1f8c
REG_SOUND			equ $1f84
REG_SOUND_IRQ_TRIGGER		equ $1f88
REG_CONTROL			equ $1f80

REG_INPUT_P1			equ $1f95
REG_INPUT_P2			equ $1f96
REG_INPUT_P3			equ $1f99
REG_INPUT_P4			equ $1f9a
REG_INPUT_DSW1			equ $1f97
REG_INPUT_DSW2			equ $1f9b
REG_INPUT_DSW3			equ $1f98
REG_INPUT_SYSTEM		equ $1f94

CHAR_COLON			equ $fe		; empty

; note only 36 tiles are visable
SCREEN_TILES_PER_LINE		equ 64
SCREEN_BYTES_PER_TILE		equ 1
SCREEN_BYTES_PER_LINE		equ (SCREEN_BYTES_PER_TILE * SCREEN_TILES_PER_LINE)

	macro	SEEK_XY
		ldx	#(FIX_TILE + $8e + \1 + (\2 * SCREEN_BYTES_PER_LINE))
	endm

	macro	SEEK_LN
		ldx	#(FIX_TILE + $8e + (\1 * SCREEN_BYTES_PER_LINE))
	endm

	macro	WATCHDOG
		sta	REG_WATCHDOG
	endm

	macro	SOUND_PLAY
		sta	REG_SOUND
		sta	REG_SOUND_IRQ_TRIGGER
	endm

	macro	SOUND_STOP
		clr	REG_SOUND
		sta	REG_SOUND_IRQ_TRIGGER
	endm
